<style>
  .panel-heading a:after {
    font-family: 'Glyphicons Halflings';
    content: "\e114";
    float: right;
    color: grey;
  }
  .panel-heading a.collapsed:after {
    content: "\e080";
  }
 .vakata-context { z-index:10052 !important; }
 
</style>


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.1.1/themes/default/style.min.css" />
<link rel="//cdn.datatables.net/plug-ins/1.10.7/integration/bootstrap/3/dataTables.bootstrap.css"/>
<script src="//cdn.datatables.net/1.10.7/js/jquery.dataTables.js"></script>
<script type="text/javascript" language="javascript" src="//cdn.datatables.net/plug-ins/1.10.7/integration/bootstrap/3/dataTables.bootstrap.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.1.1/jstree.min.js"></script>
<script>

var fields = "";

$(document).ready(function() {

  $.ajaxSetup({
      beforeSend:function(){
          // show image here
          $("#loading").show();
      },
      complete:function(){
          // hide image here
          $("#loading").hide();
      }
  });

  //Initialize the Application
  BuildTree("tree", true, "dataextension");

  //helper function to setup events
  clickEvents();
  doubleClickEvents();
  otherEvents();


  $("#collapseOne").on('show.bs.collapse', function(e) {
    $("#collapseTwo").collapse('hide');
  });

});
$(document.body).on('click', '#btnTest', function() {
    
    $("#progress").html("");
    $('#modalData').modal();
    $("#dataResults").html('<table id="example" class="table table-striped table-bordered" cellspacing="0" width="100%"><thead><tr><th>emailaddress</th><th>subscriptionstatus</th><th>campaignid</th><th>subscriptionstatuschangedate</th></tr></thead></table>');
    $('#example').dataTable( {
        "ajax": {
            url: "retrieveRows",
            data: {nameCustKey: "QBTest20_002", props: ["emailAddress", "subscriptionstatus", "campaignid","subscriptionstatuschangedate"]},
            type: 'post'
        }
    } );
});

function parseResponseStatus(response){
  
  var color = "";
  if(response.Properties.Property[0].Value === "Complete")
    color = "#00ff00;"
  else
    color = "#0000ff;"
  $("#progress").append('<div style="border-radius: 10;background: #F2F2F2; padding: 20px; display:none; color: #000; font-weight:bold;">');
  $("#progress").append('Status Code: <span style="color:' + color +  'font-weight:bold">' + response.Properties.Property[0].Value  + "</span><br>");
  $("#progress").append('</div>');
}
function parseResponse(response, message){
  
  var color = "";
  if(response.StatusCode === "OK")
    color = "#00ff00;"
  else
    color = "#ff0000;"
  $("#progress").append("<p style='font-weight: bold; text-decoration:underline'>" + message + "</p>");    
  $("#progress").append('<div style="border-radius: 10;background: #F2F2F2; padding: 20px; display:none; color: #000; font-weight:bold;">');
  $("#progress").append('Status Code: <span style="color:' + color +  'font-weight:bold">' + response.StatusCode + "</span><br>");
  $("#progress").append('Status Message: ' + response.StatusMessage + '</div>');
}
function createQuery(){
  
  var action = $("#action").val();
  
  $.ajax({
      url: '/createDE',
      //url: "/" + action + "DE",
      data: { queryText: $("#queryText").val(), nameCustKey: $("#nameCustKey").val(), description: $("#description").val(), categoryID: $("#categoryID").val()},
      type: 'post',
      //Begin Create DE Success Function
      success: function(responseObj) {
        
        var response =  responseObj.results;
        fields = responseObj.fields
        
        parseResponse(response, action + " Data Extension");
        console.log(response);
        if(response.StatusCode === "OK"){
          $.ajax({
            url: '/createQuery',
            //url: "/" + action + "Query",
            data: {queryText: $("#queryText").val(),nameCustKey: $("#nameCustKey").val(),description: $("#description").val(), categoryID: $("#categoryID").val()},
            type: 'post',
            success: function(response) {
              parseResponse(response, action + " Query Activity");
              console.log(response);
              if(response.StatusCode === "OK"){
                $.ajax({
                  url: '/executeQuery',
                  data: {queryObjectID: response.NewObjectID},
                  type: 'post',
                  //begin execute query sucess
                  success: function(response) {
                    parseResponse(response, "Execute Query Activity");
                    console.log(response);
                    if(response.StatusCode === "OK"){
                      $("#progress").append("<p style='font-weight: bold; text-decoration:underline'>Async Activity Status</p>");
                      var intervalID = setInterval(function(){
                        $.ajax({
                          url: '/queryStatus',
                          data: {queryTaskID: response.Task.ID},
                          type: 'post',
                          success: function(response) {
                            parseResponseStatus(response);
                            //console.log(response);
                            if(response.Properties.Property[0].Value === "Complete")
                            {
                              clearInterval(intervalID);
                              var html = ""
                              $('#modalData').modal();
                              
                              html += '<table id="resultsTable" class="" cellspacing="0" width="100%"><thead><tr>';
                              
                              var newFields = [];
                              for(var i=0; i < fields.length; i++)
                              {
                                newFields.push(fields[i].Name);
                                html +=  '<th>' + fields[i].Name + '</th>';
                              }
                              html += '</tr></thead><tfoot><tr>';
                              
                              for(var i=0; i < fields.length; i++)
                              {
                                html += '<th>' + fields[i].Name + '</th>';
                              }
                              html += '</tr></tfoot></table>';
                              //console.log(html);
                              
                              $("#dataResults").html(html);
                               
                              $('#resultsTable').dataTable( {
                                  "dom": 'T<"clear">lfrtip',
                                  "tableTools": {
                                      "sSwfPath": "/swf/copy_csv_xls_pdf.swf"
                                  },
                                  "ajax": {
                                      processing: true,
                                      serverside: true,
                                      url: "retrieveRows",
                                      data: {nameCustKey: $("#nameCustKey").val(), props: newFields },//["emailAddress", "subscriptionstatus", "campaignid","subscriptionstatuschangedate"]},
                                      type: 'post'
                                  }
                              } );
                            }
                          }
                        });
                      },1000)
                    }
                  }
                });
              }
              else
              {
                //TODO rollback the DE create
              }
            }
            //End query create sucess
          });
        }
      }
      //End DE Create Success Function
    });
    
  //Create Query 
  //Execute Query
  //Poll Query Status
  //Get Results
}
function BuildTree(treeName, getObjects, treeType ) {
  
  var tree = $("#" + treeName)
  var clickedNodes = [];
  var aliasCounter = 0;

  $.ajax({
    url: '/FolderTree',
    data: { treeRef: treeName, treeType: treeType },
    type: 'post',
    success: function(folders) {
      tree.jstree({
        "core": {
          "animation": 0,
          "check_callback": true,
          "multiple": false,
          "themes": {
            "stripes": true
          },
          'data': folders
        },
        "plugins": ["contextmenu", "dnd", "search", "types", "wholerow"],
        /*'sort' :  function (a, b) {
          //var a1 = this.get_node(a).original;
          //var b1 = this.get_node(b).original;
          return this.get_node(a).original.a_attr.nodeType > this.get_node(b).original.a_attr.nodeType ? 1 : -1;
        },*/
        "contextmenu": {
          items : customMenu
          /*"items": function($node) {
            return {
              "Create": {
                "separator_before": false,
                "separator_after": false,
                "label": "Create",
                "action": function(obj) {
                  $node = tree.jstree(true).create_node($node);
                  tree.jstree(true).edit($node);
                }
              }
            };
          }*/
        },
        'types' : {
          '#' : { /* options */ },
          'folder' : { /* options */ },
          'de' : { /* options */ }
        
        }
      });
      tree.bind("rename_node.jstree", function(e, data) {
        $.ajax({
          url: '/CreateFolder',
          data: {
            FolderName: data.text,
            ParentID: data.node.parent
          },
          type: 'POST',
          success: function(response) {
            parseResponse(response, "Create Folder");
            if (response.StatusCode === "OK") {
              tree.jstree(true).set_id(data.node, response.NewID);
            }
            else {
              tree.jstree(true).delete_node(data.node);
            }
          }
        });
      });
      tree.bind("select_node.jstree open_node.jstree", function(e, data){
        console.log(data);
        
        //Check if the current Node is already in the list of Clicked nodes.
        //This is to prevent duplicating the list of DE's in a folder
        //We also need to check to see if the nodeType is de so that we can not make the ajax
        // call for non folder objects
        var alreadyClicked = clickedNodes.indexOf(data.node.id);
        
        if(alreadyClicked == -1)
        {
          if((typeof data.node.a_attr.nodeType == 'undefined' || data.node.a_attr.nodeType != "de") && getObjects)
          {
            clickedNodes.push(data.node.id)
            $.ajax({
              url: '/GetObjects',
              data: {
                ParentFolderID: data.node.id,
                treeType: data.node.a_attr.nodeType
              },
              type: 'POST',
              success: function(items) {
                for(var i=0; i < items.length; i++)
                {
                    tree.jstree(true).create_node(data.node, { type: "de", text: items[i].Name, a_attr : { nodeType: "de",  alias: "tbl" + ++aliasCounter, customerKey: items[i].Name, name: items[i].Name, class: data.node.a_attr.nodeType + "_Link"},  icon : "/img/dbIcon.png"}, 'last');
                }
              }
            });
          }
        }
        tree.jstree(true).open_node(data.node);
      });
      tree.bind("ready.jstree", function (event, data){
         tree.jstree('select_node', 'ul > li:first'); 
      });
    }
  });   
}

function customMenu(node)
{
    var tree = $("#" + node.a_attr.treeRef );
    var items = {
        "Create": {
                "separator_before": false,
                "separator_after": false,
                "label": "Create",
                "action": function(obj) {
                  var node2 = tree.jstree(true).create_node(node);
                  tree.jstree(true).edit(node2);
                }
        }
    }

    if (typeof node.a_attr.appFolder === 'undefined') {
        delete items.Create;
    } 
    
    return items;
}

function clickEvents() {

  $(document.body).on('click', '#btnSubmit', function() {
      createQuery();
  });
  
  $(document.body).on('click', '.sqlRef', function() {
    $("#queryText").val($(this).attr("template"));
    $("#info").css("display", "block").html($(this).attr("info"));
  });
  
  $(document.body).on('click', '#selectFolder', function() {
    $('#modalTreeContainer').modal({
      backdrop: 'static'
    });
    BuildTree("modalTree", false, "dataextension");
  });
  
  $(document.body).on('click', '#selectQuery', function() {
    $('#modalQueryContainer').modal({
      backdrop: 'static'
    });
    BuildTree("modalQuery", true, "queryactivity");
  });
  
  $(document.body).on('click', '.dvLink', function() {

    $("#collapseThree").collapse('show');
    var cols = $(this).attr("columns").split(",");
    $('#fields').html("");
    for (var i = 0; i < cols.length; i++) {
      $('#fields').append("<a type='button' class='btn btn-xs btn-link fieldLink' alias='" + $(this).attr("alias") + "' name='" + cols[i] + "' customerKey='" + cols[i] + "' style='text-decoration:none;' id='de_" + cols[i] + "'>" + cols[i] + "</a></br>");
    }
  });

  $(document.body).on('click', '.querydefinition_Link', function() {

      var cKey = $(this).attr("customerKey");   
      $.ajax({
      url: '/getQuery',
      data: {
        customerKey: cKey
      },
      type: 'POST',
      success: function(response) {
        console.log(response);
        $("#nameCustKey").val(response.CustomerKey);
        $("#description").val(response.Description);
        $("#queryText").val(response.PartnerProperties.Value);
        $("#categoryID").val(response.CategoryID);
        $("#action").val("update");
        $('#modalQueryContainer').modal("hide");
        
      }
    });
  });

  $(document.body).on('click', '.dataextension_Link', function() {

    $("#collapseThree").collapse('show');
    var temp = $(this);
    var columns = "";
    var cKey = $(this).attr("customerKey");
    $.ajax({
      url: '/deFieldlist',
      data: {
        customerKey: cKey
      },
      type: 'POST',
      success: function(items) {
        $('#fields').html("");
        for (var i = 0; i < items.length; i++) {
          $('#fields').append("<a type='button' class='btn btn-xs btn-link fieldLink' alias='" + temp.attr("alias") + "' name='" + items[i].Name + "' customerKey='" + items[i].Name + "' style='text-decoration:none;' id='de_" + items[i].Name + "'>" + items[i].Name + "</a></br>");
          columns += items[i].Name + ",";
        }
        $('#fields').prepend("<a type='button' class='btn btn-xs btn-link fieldLink' columns='" + columns.substring(0, columns.length - 1) + "' alias='" + temp.attr("alias") + "' name='star' customerKey='star' style='text-decoration:none;' id='de_star'>*</a></br>");
      }
    });
  });
}
function doubleClickEvents() {
  $(document).on('dblclick', '.fieldLink', function() {
    var name = $(this).attr("name");
    var alias = $(this).attr("alias");

    if ("star" === name) {
      var columns = $(this).attr("columns").split(",");
      for (var i = 0; i < columns.length; i++)
        if (i < columns.length - 1)
          $("#queryText").insertAtCaret(alias + "." + columns[i].trim() + ", ", "back");
        else
          $("#queryText").insertAtCaret(alias + "." + columns[i].trim(), "back");
    }
    else
    {
      $("#queryText").insertAtCaret(alias + "." + name.trim(), "back");
    }
  });

  $(document).on('dblclick', '.dataextension_Link', function() {
    var name = $(this).attr("name");
    var alias = $(this).attr("alias");
    $("#queryText").insertAtCaret(name + " as " + alias, "front");

  });

  $(document).on('dblclick', '.dvLink', function() {
    var name = $(this).attr("name");
    var alias = $(this).attr("alias");
    $("#queryText").insertAtCaret(name + " as " + alias, "front");

  });
}
function otherEvents() {

  $('#treeContainer').on('show.bs.collapse', function(e) {

  });

  $('#modalTreeContainer').on('hide.bs.modal', function(e) {
     var selected = $('#modalTree').jstree(true).get_selected(true); 
     $("#folderName").val(selected[0].text);
     $("#categoryID").val(selected[0].id);
  });

  $(document).on('blur', '#nameCustKey', function() {
    if ($(this).val() != "") {
      var textBox = $(this);
      $.ajax({
        url: '/nameCheck',
        type: 'post',
        data: {
          customerKey: $(this).val(),
          objType: "dataextension"
        },
        success: function(items) {
          if (items.length > 0) {
            textBox.val("");
            textBox.focus();
            alert("The choosen name has already been used, please enter a new name.")
          }
        }
      });
    }
  });
}
jQuery.fn.extend({
  insertAtCaret: function(myValue) {
    return this.each(function(i) {
      if (document.selection) {
        //For browsers like Internet Explorer
        this.focus();
        var sel = document.selection.createRange();
        sel.text = myValue;
        this.focus();
      }
      else if (this.selectionStart || this.selectionStart == '0') {
        //For browsers like Firefox and Webkit based
        var startPos = this.selectionStart;
        var endPos = this.selectionEnd;
        var scrollTop = this.scrollTop;
        this.value = this.value.substring(0, startPos) + myValue + this.value.substring(endPos, this.value.length);
        this.focus();
        this.selectionStart = startPos + myValue.length;
        this.selectionEnd = startPos + myValue.length;
        this.scrollTop = scrollTop;
      }
      else {
        this.value += myValue;
        this.focus();
      }
    });
  }
});

</script>
<div class="container">
  <div class="row">
    <div class="col-md-4">
      <div class="panel-group" id="accordion">
        <!-- DE Collapse Panel-->
        <div class="panel panel-default" id="panel1">
          <div class="panel-heading">
            <h4 class="panel-title">
              <a data-toggle="collapse" data-target="#collapseOne" href="#collapseOne">Data Extensions</a>
              <span id="loading"><img style="height:16px;" src="/img/ajax-loader.gif"/></span>
            </h4>
          </div>
          <div id="collapseOne" class="panel-collapse collapse in">
            <div class="panel-body" id="tree" style="height:400px; overflow-y:auto;"></div>
          </div>
        </div>
        <!-- DV Collapse Panel-->
        <div class="panel panel-default" id="panel2">
          <div class="panel-heading">
            <h4 class="panel-title">
              <a data-toggle="collapse" data-target="#collapseTwo" href="#collapseTwo" class="collapsed">Data Views</a>
            </h4>
          </div>
          <div id="collapseTwo" class="panel-collapse collapse">
            <div class="panel-body" id="views" style="height:100; overflow:scroll;">
              <a type='button' class='btn btn-xs btn-link dvLink' columns="AccountID,	OYBAccountID,	JobID,	ListID,	BatchID,	SubscriberID,	SubscriberKey,	EventDate,	Domain,	TriggeredSendDefinitionObjectID,	TriggeredSendCustomerKey," alias='s' name='_sent' customerKey='sent'
              style='text-decoration:none;' id='dv_sent'>_sent</a>
              </br>
              <a type='button' class='btn btn-xs btn-link dvLink' columns="AccountID,	OYBAccountID,	JobID,	ListID,	BatchID,	SubscriberID,	SubscriberKey,	EventDate,	Domain,	IsUnique,	TriggererSendDefinitionObjectID,	TriggeredSendCustomerKey," alias='o' name='_open'
              customerKey='open' style='text-decoration:none;' id='dv_open'>_open</a>
              </br>
              <a type='button' class='btn btn-xs btn-link dvLink' columns="AccountID,	OYBAccountID,	JobID,	ListID,	BatchID,	SubscriberID,	SubscriberKey,	EventDate,	Domain,	URL,	LinkName,	LinkContent,	IsUnique,	TriggeredSendDefinitionObjectID,	TriggeredSendCustomerKey,"
              alias='c' name='_click' customerKey='click' style='text-decoration:none;' id='dv_click'>_click</a>
              </br>
              <a type='button' class='btn btn-xs btn-link dvLink' columns="AccountID,	OYBAccountID,	JobID,	ListID,	BatchID,	SubscriberID,	SubscriberKey,	EventDate,	IsUnique,	Domain," alias='u' name='_unsubscribe' customerKey='unsubscribe' style='text-decoration:none;'
              id='dv_unsubscribe'>_unsub</a>
              </br>
              <a type='button' class='btn btn-xs btn-link dvLink' columns="AccountID,	OYBAccountID,	JobID,	ListID,	BatchID,	SubscriberID,	SubscriberKey,	EventDate,	IsUnique,	Domain,	BounceCategoryID,	BounceCategory,	BounceSubcategoryID,	BounceSubcategory,	BounceTypeID,	BounceType,	SMTPBounceReason,	SMTPMessage,	SMTPCode,	TriggererSendDefinitionObjectID,	TriggeredSendCustomerKey"
              alias='b' name='_bounce' customerKey='bounce' style='text-decoration:none;' id='dv_bounce'>_bounce</a>
              </br>
            </div>
          </div>
        </div>
        <!-- Fields Collapse Panel-->
        <div class="panel panel-default" id="panel3">
          <div class="panel-heading">
            <h4 class="panel-title">
              <a data-toggle="collapse" data-target="#collapseThree" href="#collapseThree" class="collapsed">Fields</a>
            </h4>
          </div>
          <div id="collapseThree" class="panel-collapse collapse">
             <div class="panel-body" id="fields" style="height:400px; overflow-y:auto;"></div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-8">
      <table>
        <tr>
          <td><input type="text" class="form-control" id="nameCustKey" style="width:600px;" name="nameCustKey" placeholder="Query Name"></td><td>&nbsp;</td>
          <td><button type="button" id="selectQuery" style="display:inline;" class="btn btn-s btn-info" >Open Query</button></td>
        </tr>
      </table>
      <br>
      <table>
        <tr>
          <td><input type="text" class="form-control" id="description" style="width:715px;" name="description" placeholder="Query Description"></td><td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
      <br>
      <table>
        <tr>
          <td><input type="text" class="form-control" id="folderName" style="width:600px;" name="description" placeholder="Destination Folder"></td><td>&nbsp;</td>
          <td><button type="button" id="selectFolder" style="display:inline;" class="btn btn-s btn-info" >Select Folder</button></td>
        </tr>
      </table>
      <input type="hidden" id="categoryID">
      <input type="hidden" id="action" value="create">
      <br><br>
      <textarea id="queryText" name="queryText" cols="100" rows="15">select &#13;from </textarea>
      <br>
      <button type="button" class="select sqlRef btn btn-xs btn-info" info="select records from a single table" template="select <FIELDS> &#13;FROM <TABLEA as a> &#13;">select</button>
      <button type="button" class="innerjoin sqlRef btn btn-xs btn-info" info="The INNER JOIN keyword selects all rows from both tables as long as there is a match between the columns in both tables." template="select <FIELDS> &#13;FROM <TABLEA as a> &#13;inner join <TABLEB as b> on <a.Key> = <b.Key>">inner join</button>
      <button type="button" class="sqlRef btn btn-xs btn-info" info="The LEFT JOIN keyword returns all rows from the left table (table1), with the matching rows in the right table (table2). The result is NULL in the right side when there is no match." template="select <FIELDS> &#13;FROM <TABLEA as a> &#13;left join <TABLEB as b> on <a.Key> = <b.Key>">left join</button>
      <button type="button" class="sqlRef btn btn-xs btn-info" info="The RIGHT JOIN keyword returns all rows from the right table (table2), with the matching rows in the left table (table1). The result is NULL in the left side when there is no match." template="select <FIELDS> &#13;FROM <TABLEA as a> &#13;right join <TABLEB as b> on <a.Key> = <b.Key>">right join</button>
      <button type="button" class="sqlRef btn btn-xs btn-info" info="The FULL JOIN keyword returns all rows from the left table (table1) and from the right table (table2)." template="select <FIELDS> &#13;FROM <TABLEA as a> &#13;full join <TABLEB as b> on <a.Key> = <b.Key>">full join</button>
      <button type="button" class="sqlRef btn btn-xs btn-info" info="Return a record count from a table" template="select COUNT(*) as count&#13;FROM <TABLEA as a>">count</button>
      <br><br>
      <button type="submit" id="btnSubmit" class="btn btn-success">Submit</button>
      <br>
      <div id="progress" style="height:200px; overflow-y: auto;"></div>
    </div>
  </div>
</div>
<div id="output"></div>

<div id="modalData" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div id="dataResults" style="padding:10px;">
        
      </div>
    </div>
  </div>
</div>

<div id="modalTreeContainer" class="modal fade">
  <div class="modal-dialog">
    <div class="modal-content"  style="width:350px;">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">Select folder</h4>
      </div>
      <div class="modal-body">
        <div id="modalTree" style="height:400px; width:300px; overflow-y: auto; overflow-x:auto;">
        
      </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Select</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div id="modalQueryContainer" class="modal fade">
  <div class="modal-dialog">
    <div class="modal-content"  style="width:350px;">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">Select folder</h4>
      </div>
      <div class="modal-body">
        <div id="modalQuery" style="height:400px; width:300px; overflow-y: auto; overflow-x:auto;">
        
      </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Select</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->